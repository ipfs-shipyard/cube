node(label: 'linux') { ansiColor('xterm') {
  stage("Build") {
    checkout scm
    sh "docker build -t ipfs-shipyard/cube ."
  }
  parallel tests: {
      stage("Tests + Coverage") {
        sh "docker run --rm -v \$(pwd)/target:/usr/src/app/target ipfs-shipyard/cube lein cloverage --junit"
        junit 'target/coverage/junit.xml'
        archiveArtifacts 'target/coverage/**'
      }
  },
  uberjar: {
    stage("Uberjar") {
      sh "docker run --rm -v \$(pwd)/target:/usr/src/app/target ipfs-shipyard/cube lein uberjar"
      archiveArtifacts 'target/*'
    }
  }
  stage("Clean") {
    sh "docker rmi ipfs-shipyard/cube"
    cleanWs()
  }
}}
